{"version":3,"sources":["animatedHeadline.es6"],"names":["$","fn","animatedHeadline","options","settings","extend","duration","autoplaySpeed","this","each","set_width","$this","css","width","width_arr","find","map","Math","round","get","max","apply","animation","interval","clearInterval","animation_interval","setInterval","$current","$next","next","length","removeClass","addClass","TweenLite","to","rotationX","y","items_height","autoAlpha","fromTo","full_interval_ms","set","window","on","outerHeight","onfocus","onblur","jQuery"],"mappings":"cAQA,SAAWA,GAEPA,EAAEC,GAAGC,iBAAmB,SAAUC,GAE9B,GAAIC,GAAWJ,EAAEK,QACbC,SAAU,GACVC,cAAe,GAChBJ,EAGHH,GAAEQ,MAAMC,KAAK,WAkBT,QAAUC,KAENC,EAAMC,KACFC,MAAO,QAGX,IAAIC,GAAYH,EAAMI,KAAK,KAAKC,IAAI,WAChC,MAAOC,MAAKC,MAAMlB,EAAEQ,MAAMK,WAC3BM,KAGHR,GAAMC,KACFC,MAAOI,KAAKG,IAAIC,MAAM,KAAMP,GAAa,OAejD,QAASQ,GAAUC,GAIfC,cAAcC,GAEdA,EAAqBC,YAAY,WAK7BC,EAAWhB,EAAMI,KAAK,YAEtBa,EAAQD,EAASE,OAEZD,EAAME,SACPF,EAAQjB,EAAMI,KAAK,YAIvBY,EAASI,YAAY,UACrBH,EAAMI,SAAS,UAGfC,UAAUC,GAAGP,EAAUvB,EAASE,UAAW6B,UAAW,GAAIC,EAAGC,EAAe,EAAGC,UAAW,IAC1FL,UAAUM,OAAOX,EAAOxB,EAASE,UAAW6B,WAAY,GAAIC,GAAIC,EAAe,IAC3EF,UAAW,EACXC,EAAG,EACHE,UAAW,KAIhBf,GA3EP,GAAIZ,GAAQX,EAAEQ,MACVmB,MAAAA,GAAUC,MAAAA,GACVH,MAAAA,GACAe,EAAkE,KAA9CpC,EAASE,SAAWF,EAASG,eACjD8B,MAAAA,EAEJJ,WAAUQ,IAAI9B,EAAMI,KAAK,mBAAoBuB,UAAW,IAGxDtC,EAAE0C,QAAQC,GAAG,cAAe,WACxBjC,IAEA2B,EAAe1B,EAAMI,KAAK,KAAK6B,gBAqBnCF,OAAOG,QAAU,WACbvB,EAAUkB,IAEdE,OAAOI,OAAS,WACZtB,cAAcC,IAIlBH,EAAUkB,OA0CnBO","file":"animatedHeadline.min.js","sourcesContent":["/*\n\n animatedBrackets\n\n Author: lemehovskiy\n\n */\n\n(function ($) {\n\n    $.fn.animatedHeadline = function (options) {\n\n        let settings = $.extend({\n            duration: 0.5,\n            autoplaySpeed: 2\n        }, options);\n\n\n        $(this).each(function () {\n\n            let $this = $(this);\n            let $current, $next;\n            let animation_interval;\n            let full_interval_ms = (settings.duration + settings.autoplaySpeed) * 1000;\n            let items_height;\n\n            TweenLite.set($this.find('b:not(.active)'), {autoAlpha: 0});\n\n\n            $(window).on('load resize', function(){\n                set_width();\n\n                items_height = $this.find('b').outerHeight();\n            });\n\n\n            function  set_width() {\n\n                $this.css({\n                    width: 'auto'\n                })\n\n                let width_arr = $this.find('b').map(function () {\n                    return Math.round($(this).width());\n                }).get();\n\n\n                $this.css({\n                    width: Math.max.apply(null, width_arr) + 'px'\n                })\n            }\n\n\n            window.onfocus = function () {\n                animation(full_interval_ms);\n            };\n            window.onblur = function () {\n                clearInterval(animation_interval);\n            };\n\n            //init call\n            animation(full_interval_ms);\n\n            function animation(interval) {\n\n\n                //clear current interval\n                clearInterval(animation_interval);\n\n                animation_interval = setInterval(function () {\n\n                    let item_options;\n\n\n                    $current = $this.find('b.active');\n\n                    $next = $current.next();\n\n                    if (!$next.length) {\n                        $next = $this.find(\"b:first\");\n                    }\n\n\n                    $current.removeClass('active');\n                    $next.addClass('active');\n\n\n                    TweenLite.to($current, settings.duration, {rotationX: 90, y: items_height / 2, autoAlpha: 0});\n                    TweenLite.fromTo($next, settings.duration, {rotationX: -90, y: -items_height / 2}, {\n                        rotationX: 0,\n                        y: 0,\n                        autoAlpha: 1\n                    });\n\n\n                }, interval);\n\n            }\n\n        });\n\n    }\n\n})(jQuery);"]}