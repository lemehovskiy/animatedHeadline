{"version":3,"sources":["animatedHeadline.es6"],"names":["factory","define","amd","exports","module","require","jQuery","$","fn","animatedHeadline","options","general_settings","extend","duration","autoplay_speed","center_mode","this","each","set_width","$slide_items","css","width","$this","width_arr","find","map","Math","round","get","max","apply","run_interval","interval","clearInterval","loop_interval","setInterval","update_current_index","item_interval","slides","current_index","settings","show_item","element","hide_item","get_prev_index","addClass","TweenLite","fromTo","rotationX","y","items_height","autoAlpha","removeClass","to","length","prev_index","set","index","$this_item","slide","data","push","window","on","outerHeight"],"mappings":"cASE,SAAUA,GAEc,kBAAXC,SAAyBA,OAAOC,IACvCD,QAAQ,UAAWD,GACO,mBAAZG,SACdC,OAAOD,QAAUH,EAAQK,QAAQ,WAEjCL,EAAQM,SAKf,SAAUC,GAEPA,EAAEC,GAAGC,iBAAmB,SAAUC,GAE9B,GAAIC,GAAmBJ,EAAEK,QACrBC,SAAU,GACVC,eAAgB,EAChBC,aAAa,GACdL,EAGHH,GAAES,MAAMC,KAAK,WA4CT,QAASC,KAEDP,EAAiBI,aACjBI,EAAaC,KACTC,MAAO,SAIfC,EAAMF,KACFC,MAAO,QAGX,IAAIE,GAAYD,EAAME,KAAK,KAAKC,IAAI,WAChC,MAAOC,MAAKC,MAAMpB,EAAES,MAAMK,WAC3BO,KAGHN,GAAMF,KACFC,MAAOK,KAAKG,IAAIC,MAAM,KAAMP,GAAa,OAGzCZ,EAAiBI,aACjBI,EAAaC,KACTC,MAAO,SAKnB,QAASU,GAAaC,GAElBC,cAAcC,GAEdA,EAAgBC,YAAY,WAGxBC,GAEA,IAAIC,GAAgBC,EAAOC,GAAeC,SAAS1B,eAAiBwB,EAAOC,GAAeC,SAAS3B,QAE/FmB,IAAYK,GACZN,EAAaM,GAGjBI,GACIC,QAASJ,EAAOC,GAAeG,QAC/B7B,SAAUyB,EAAOC,GAAeC,SAAS3B,WAE7C8B,GACID,QAASJ,EAAOM,EAAeL,IAAgBG,QAC/C7B,SAAUyB,EAAOC,GAAeC,SAAS3B,YAGnC,IAAXmB,GAKP,QAASS,GAAUD,GAEfA,EAASE,QAAQG,SAAS,UAE1BC,UAAUC,OAAOP,EAASE,QAASF,EAAS3B,UAAWmC,UAAW,GAAIC,GAAIC,EAAe,IACrFF,UAAW,EACXC,EAAG,EACHE,UAAW,IAInB,QAASR,GAAUH,GAEfA,EAASE,QAAQU,YAAY,UAE7BN,UAAUO,GAAGb,EAASE,QAASF,EAAS3B,UAAWmC,WAAY,GAAIC,EAAGC,EAAe,EAAGC,UAAW,IAIvG,QAASf,KAEDG,GAAiBD,EAAOgB,OAAS,EACjCf,EAAgB,EAIhBA,IAIR,QAASK,GAAeW,GACpB,MAAkB,IAAdA,EACOjB,EAAOgB,OAAS,EAGhBC,EAAa,EAtI5B,GAAIjC,GAAQf,EAAES,MACVG,EAAeG,EAAME,KAAK,KAC1B0B,MAAAA,GACAZ,KACAC,MAAAA,GACAL,MAAAA,IAIJ,WAGIY,UAAUU,IAAIlC,EAAME,KAAK,mBAAoB2B,UAAW,IAGxDZ,EAAgBjB,EAAME,KAAK,YAAYiC,QAGvCtC,EAAaF,KAAK,WAEd,GAAIyC,GAAanD,EAAES,MAEf2C,IAEJA,GAAMnB,SAAWjC,EAAEK,UAAWD,EAAkB+C,EAAWE,KAAK,2BAEhED,EAAMjB,QAAUgB,EAEhBpB,EAAOuB,KAAKF,KAIhBpD,EAAEuD,QAAQC,GAAG,cAAe,WACxB7C,IAEAgC,EAAe/B,EAAa6C,gBAGhCjC,EAAaO,EAAO,GAAGE,SAAS1B","file":"animatedHeadline.min.js","sourcesContent":["\n/*\n\n animatedHeadline\n\n Author: lemehovskiy\n\n */\n\n;(function (factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports !== 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery);\n    }\n\n}\n\n(function ($) {\n\n    $.fn.animatedHeadline = function (options) {\n\n        let general_settings = $.extend({\n            duration: 0.5,\n            autoplay_speed: 2,\n            center_mode: false\n        }, options);\n\n\n        $(this).each(function () {\n\n            let $this = $(this),\n                $slide_items = $this.find('b'),\n                items_height,\n                slides = [],\n                current_index,\n                loop_interval;\n\n            init();\n\n            function init (){\n\n                //hide not active\n                TweenLite.set($this.find('b:not(.active)'), {autoAlpha: 0});\n\n                //set init index\n                current_index = $this.find('b.active').index();\n\n                //generate items arr\n                $slide_items.each(function () {\n\n                    let $this_item = $(this);\n\n                    let slide = {};\n\n                    slide.settings = $.extend({}, general_settings, $this_item.data('animated-headline-item'));\n\n                    slide.element = $this_item;\n\n                    slides.push(slide);\n\n                });\n\n                $(window).on('load resize', function () {\n                    set_width();\n\n                    items_height = $slide_items.outerHeight();\n                });\n\n                run_interval(slides[0].settings.autoplay_speed);\n            }\n\n\n            function set_width() {\n\n                if (general_settings.center_mode) {\n                    $slide_items.css({\n                        width: 'auto'\n                    });\n                }\n\n                $this.css({\n                    width: 'auto'\n                });\n\n                let width_arr = $this.find('b').map(function () {\n                    return Math.round($(this).width());\n                }).get();\n\n\n                $this.css({\n                    width: Math.max.apply(null, width_arr) + 'px'\n                })\n\n                if (general_settings.center_mode) {\n                    $slide_items.css({\n                        width: '100%'\n                    });\n                }\n            }\n\n            function run_interval(interval) {\n\n                clearInterval(loop_interval);\n\n                loop_interval = setInterval(function () {\n\n\n                    update_current_index();\n\n                    let item_interval = slides[current_index].settings.autoplay_speed + slides[current_index].settings.duration;\n\n                    if (interval != item_interval) {\n                        run_interval(item_interval);\n                    }\n\n                    show_item({\n                        element: slides[current_index].element,\n                        duration: slides[current_index].settings.duration\n                    });\n                    hide_item({\n                        element: slides[get_prev_index(current_index)].element,\n                        duration: slides[current_index].settings.duration\n                    });\n\n                }, interval * 1000);\n\n            }\n\n\n            function show_item(settings) {\n\n                settings.element.addClass('active');\n\n                TweenLite.fromTo(settings.element, settings.duration, {rotationX: 90, y: -items_height / 2}, {\n                    rotationX: 0,\n                    y: 0,\n                    autoAlpha: 1\n                });\n            }\n\n            function hide_item(settings) {\n\n                settings.element.removeClass('active');\n\n                TweenLite.to(settings.element, settings.duration, {rotationX: -90, y: items_height / 2, autoAlpha: 0});\n            }\n\n\n            function update_current_index() {\n\n                if (current_index == slides.length - 1) {\n                    current_index = 0;\n                }\n\n                else {\n                    current_index++;\n                }\n            }\n\n            function get_prev_index(prev_index) {\n                if (prev_index == 0) {\n                    return slides.length - 1;\n                }\n                else {\n                    return prev_index - 1;\n                }\n            }\n\n\n        });\n\n    }\n\n}));"]}